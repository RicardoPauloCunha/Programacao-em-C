Interface = define o que a classe tem que fazer, como um contrato.
repositorio = como.
sobreCarga = métodos com nome iguais mas com parametros diferentes

construtor
UsuarioModel -> sempre tem que ser no model
() <- método construtor, que internamente existe:
ação no nomento em que você instancia um objeto, meio que vai chamar um metodo insplicito;
para construir o método ele precisa passar os parametros;
tambem possubilita pré-definir dados caso e user ou dev não coloque nada;
possui a capacidade de colocar rotulos de acordo com o nome dos parametros,
n precisando assim colocar em ordem, caso haja muitos parametros;


public UsuarioModel() <- método que obriga o desenvolvedor a passar os parametro no construção do objeto;
para colocar dentro do objeto;

ele só alterou a forma em que se instancia o objeto

//////////////////////////////

interface
minimizar mudanças brutas
serialização = transforma o objeto em bytes e grava-o em um arquivo
momoryStream = serve para guardar dados;
[Serializable] marca a class como serializavel	

/////////////////////////////
polimorfismo = o objeto pode ser outro de instanciado de forma diferente, tem a ver com herança;
declara a variavel genérica e instancia ela especifica
	